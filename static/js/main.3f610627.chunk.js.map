{"version":3,"sources":["logo.svg","SunburstChart.js","d3sparql.js","App.js","reportWebVitals.js","index.js","rest.js"],"names":["SunburstChart","require","get","then","data","console","log","drawChart","width","radius","format","d3","arc","startAngle","d","x0","endAngle","x1","padAngle","Math","min","padRadius","innerRadius","y0","outerRadius","max","y1","json","root","pair","Map","size","parent","child","children","i","length","has","push","set","tree","traverse","node","list","map","subtotal","value","JSON","stringify","sum","sort","a","b","PI","height","partition","color","each","current","g","append","attr","style","path","selectAll","descendants","slice","join","arcVisible","filter","on","clicked","text","ancestors","name","reverse","label","labelVisible","labelTransform","datum","event","p","target","depth","t","transition","duration","tween","this","getAttribute","attrTween","x","y","id","Component","App","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","axios","exports","url","Promise","resolve","response","catch","error"],"mappings":"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","file":"static/js/main.3f610627.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","\nimport React, {Component} from 'react';\nimport * as d3 from \"d3\";\nimport {get} from \"./rest\";\nimport {tree} from \"./d3sparql\";\nconst axios = require('axios');\n\nclass SunburstChart extends Component {\n\n    componentDidMount() {\n\n        get(\"https://raw.githubusercontent.com/OpenBioLink/ITOExplorer/main/sunburst.json\").then((data) => {\n            console.log(data);\n            this.drawChart(data);\n        })\n    }\n\n    \n\n    drawChart(data) {\n\n        var width = 983\n        var radius = width / 6\n        var format = d3.format(\",d\")\n\n        var arc = d3.arc()\n            .startAngle(d => d.x0)\n            .endAngle(d => d.x1)\n            .padAngle(d => Math.min((d.x1 - d.x0) / 2, 0.005))\n            .padRadius(radius * 1.5)\n            .innerRadius(d => d.y0 * radius)\n            .outerRadius(d => Math.max(d.y0 * radius, d.y1 * radius - 1))\n\n        var partition = data => {\n            const root = d3.hierarchy(data)\n                .sum(d => d.value)\n                .sort((a, b) => b.value - a.value);\n            return d3.partition()\n                .size([2 * Math.PI, root.height + 1])\n              (root);\n          }\n\n        data = tree(data, \"Process\");\n        const root = partition(data);\n        console.log(root);\n        var color = d3.interpolateReds\n        console.log(d3.quantize(d3.interpolateReds, root.value))\n        console.log(color(0))\n        console.log(color(root.value))\n        root.each(d => d.current = d);\n\n        const svg = d3.select(\"#sunburst\").append(\"svg\")\n            .attr(\"width\", width)\n            .attr(\"height\", width)\n            .attr(\"viewBox\", [0, 0, width, width])\n            .style(\"font\", \"10px sans-serif\");\n        \n        const g = svg.append(\"g\")\n            .attr(\"transform\", `translate(${width / 2},${width / 2})`);\n        \n        const path = g.append(\"g\")\n            .selectAll(\"path\")\n            .data(root.descendants().slice(1))\n            .join(\"path\")\n            .attr(\"fill\", d => { return color(d.value / (d.parent.value*0.5)); })\n            .attr(\"fill-opacity\", d => arcVisible(d.current) ? (d.children ? 0.6 : 0.4) : 0)\n            .attr(\"d\", d => arc(d.current));\n        \n        path.filter(d => d.children)\n            .style(\"cursor\", \"pointer\")\n            .on(\"click\", clicked);\n        \n        path.append(\"title\")\n            .text(d => `${d.ancestors().map(d => d.data.name).reverse().join(\"/\")}\\n${format(d.value)}`);\n        \n        const label = g.append(\"g\")\n            .attr(\"pointer-events\", \"none\")\n            .attr(\"text-anchor\", \"middle\")\n            .style(\"user-select\", \"none\")\n            .selectAll(\"text\")\n            .data(root.descendants().slice(1))\n            .join(\"text\")\n            .attr(\"dy\", \"0.35em\")\n            .attr(\"fill-opacity\", d => +labelVisible(d.current))\n            .attr(\"transform\", d => labelTransform(d.current))\n            .text(d => d.data.name);\n        \n        const parent = g.append(\"circle\")\n            .datum(root)\n            .attr(\"r\", radius)\n            .attr(\"fill\", \"none\")\n            .attr(\"pointer-events\", \"all\")\n            .on(\"click\", clicked);\n        \n        function clicked(event, p) {\n            parent.datum(p.parent || root);\n        \n            root.each(d => d.target = {\n            x0: Math.max(0, Math.min(1, (d.x0 - p.x0) / (p.x1 - p.x0))) * 2 * Math.PI,\n            x1: Math.max(0, Math.min(1, (d.x1 - p.x0) / (p.x1 - p.x0))) * 2 * Math.PI,\n            y0: Math.max(0, d.y0 - p.depth),\n            y1: Math.max(0, d.y1 - p.depth)\n            });\n        \n            const t = g.transition().duration(750);\n        \n            // Transition the data on all arcs, even the ones that arenâ€™t visible,\n            // so that if this transition is interrupted, entering arcs will start\n            // the next transition from the desired position.\n            path.transition(t)\n                .tween(\"data\", d => {\n                const i = d3.interpolate(d.current, d.target);\n                return t => d.current = i(t);\n                })\n            .filter(function(d) {\n                return +this.getAttribute(\"fill-opacity\") || arcVisible(d.target);\n            })\n                .attr(\"fill-opacity\", d => arcVisible(d.target) ? (d.children ? 0.6 : 0.4) : 0)\n                .attrTween(\"d\", d => () => arc(d.current));\n        \n            label.filter(function(d) {\n                return +this.getAttribute(\"fill-opacity\") || labelVisible(d.target);\n            }).transition(t)\n                .attr(\"fill-opacity\", d => +labelVisible(d.target))\n                .attrTween(\"transform\", d => () => labelTransform(d.current));\n        }\n        \n        function arcVisible(d) {\n            return d.y1 <= 3 && d.y0 >= 1 && d.x1 > d.x0;\n        }\n        \n        function labelVisible(d) {\n            return d.y1 <= 3 && d.y0 >= 1 && (d.y1 - d.y0) * (d.x1 - d.x0) > 0.03;\n        }\n        \n        function labelTransform(d) {\n            const x = (d.x0 + d.x1) / 2 * 180 / Math.PI;\n            const y = (d.y0 + d.y1) / 2 * radius;\n            return `rotate(${x - 90}) translate(${y},0) rotate(${x < 180 ? 0 : 180})`;\n        }\n        \n        //return svg.node();\n        \n    }\n\n    render() {\n        return <div id=\"sunburst\"/>;\n      }\n  \n  \n\n}\n\nexport default SunburstChart;","import * as d3 from \"d3\";\n\n//\n// d3sparql.js - utilities for visualizing SPARQL results with the D3 library\n//\n//   Web site: http://github.com/ktym/d3sparql/\n//   Copyright: 2013-2015 (C) Toshiaki Katayama (ktym@dbcls.jp)\n//   License: BSD license (same as D3.js)\n//   Initial version: 2013-01-28\n//\n\nvar d3sparql = {\n    version: \"d3sparql.js version 2018-05-04\",\n    debug: false  // set to true for showing debug information\n  }\n\n/*\n  Convert sparql-results+json object into a JSON tree of {\"name\": name, \"value\": size, \"children\": []} format like in the flare.json file.\n  Suitable for d3.layout.hierarchy() family\n    * cluster:    d3sparql.dendrogram()\n    * pack:       d3sparql.circlepack()\n    * partition:  d3sparql.sunburst()\n    * tree:       d3sparql.roundtree()\n    * treemap:    d3sparql.treemap(), d3sparql.treemapzoom()\n  Options:\n    config = {\n      \"root\":   \"root_name\",    // SPARQL variable name for root node (optional; default is the 1st variable)\n      \"parent\": \"parent_name\",  // SPARQL variable name for parent node (optional; default is the 2nd variable)\n      \"child\":  \"child_name\",   // SPARQL variable name for child node (ptional; default is the 3rd variable)\n      \"value\":  \"value_name\"    // SPARQL variable name for numerical value of the child node (optional; default is the 4th variable or \"value\")\n    }\n  Synopsis:\n    d3sparql.sparql(endpoint, sparql, render)\n    function render(json) {\n      var config = { ... }\n      d3sparql.roundtree(json, config)\n      d3sparql.dendrogram(json, config)\n      d3sparql.sunburst(json, config)\n      d3sparql.treemap(json, config)\n      d3sparql.treemapzoom(json, config)\n    }\n*/\nfunction tree(json, root) {\n\n    var pair = new Map()\n    var size = new Map()\n    var parent = true;\n    var child = true;\n    var children = true\n    for (var i = 0; i < json.length; i++) {\n      parent = json[i][1]\n      child = json[i][0]\n      if (parent != child) {\n        if (pair.has(parent)) {\n          children = pair.get(parent)\n          children.push(child)\n        } else {\n          children = [child]\n        }\n        pair.set(parent, children)\n      }\n    }\n    function traverse(node) {\n      var list = pair.get(node)\n      if (list) {\n        var children = list.map(function(d) { return traverse(d) })\n        // sum of values of children\n        var subtotal = d3.sum(children, function(d) { return d.value })\n        // add a value of parent if exists\n        var total = d3.sum([subtotal, size.get(node)])\n        return {\"name\": node, \"children\": children}\n      } else {\n        return {\"name\": node, \"value\": size.get(node) || 1}\n      }\n    }\n    var tree = traverse(root)\n  \n    if (true || d3sparql.debug) { console.log(JSON.stringify(tree)) }\n    return tree\n  }\n\n  export{tree};","import logo from './logo.svg';\nimport './App.css';\nimport SunburstChart from \"./SunburstChart\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <SunburstChart/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","\nconst axios = require('axios');\n\nfunction get(url){\n    return new Promise((resolve) => {\n        axios.get(\n            url\n        ).then(function (response) {\n            resolve(response.data);\n        })\n        .catch(function (error) {\n            console.log(error);\n        });\n    });\n}\n\nexports.get = get;"],"sourceRoot":""}