{"version":3,"sources":["logo.svg","SunburstChart.js","d3sparql.js","App.js","reportWebVitals.js","index.js","rest.js"],"names":["SunburstChart","get","this","props","url","then","data","drawChart","width","radius","format","d3","arc","startAngle","d","x0","endAngle","x1","padAngle","Math","min","padRadius","innerRadius","y0","outerRadius","max","y1","json","root","pair","Map","size","parent","child","children","i","length","has","push","set","tree","traverse","node","list","map","subtotal","value","console","log","JSON","stringify","sum","sort","a","b","PI","height","partition","color","each","current","g","id","append","attr","style","path","selectAll","descendants","slice","join","arcVisible","filter","on","clicked","text","ancestors","name","reverse","label","labelVisible","labelTransform","datum","event","p","target","depth","t","transition","duration","tween","getAttribute","attrTween","x","y","className","Component","App","useState","href","align","alt","src","border","seamless","class","role","scrolling","display","marginLeft","marginRight","rel","borderWidth","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","axios","require","exports","Promise","resolve","response","catch","error"],"mappings":"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","file":"static/js/main.4b5503cc.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","\nimport React, {Component} from 'react';\nimport * as d3 from \"d3\";\nimport {get} from \"./rest\";\nimport {tree} from \"./d3sparql\";\n\nclass SunburstChart extends Component {\n\n    componentDidMount() {\n        get(this.props.url).then((data) => {\n            this.drawChart(data);\n        })\n    }\n\n    /*\n    drawLoading(){\n        var width = 900\n        var radius = width / 6\n        var format = d3.format(\",d\")\n\n        var arc = d3.arc()\n            .startAngle(d => d.x0)\n            .endAngle(d => d.x1)\n            .padAngle(d => Math.min((d.x1 - d.x0) / 2, 0.005))\n            .padRadius(radius * 1.5)\n            .innerRadius(d => d.y0 * radius)\n            .outerRadius(d => Math.max(d.y0 * radius, d.y1 * radius - 1))\n        \n        var color = d3.interpolateReds\n        const svg = d3.select(\"#sunburst\").append(\"svg\")\n            .attr(\"width\", width)\n            .attr(\"height\", width)\n            .attr(\"viewBox\", [0, 0, width, width])\n            .style(\"font\", \"13px helvetica sans-serif\");\n\n\n        var root = {\"name\": \"root\", \"children\": []}\n        var data = [1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377]\n        data.forEach((elem,idx) => {\n            var children = data.slice(0,idx)\n            children.forEach((elem_,idx_) => {\n                children[idx_] = {\"name\": elem_, \"value\": elem_}\n            });\n            root.children.push({\"name\": elem, \"children\": children})\n        });\n\n        root = d3.hierarchy(root)\n                    .sum(d => d.value)\n                    .sort((a, b) => b.value - a.value);\n        root.each(d => d.current = d);\n        console.log(root);\n            \n        var part = d3.partition().size([2 * Math.PI, 3])(root);\n\n        console.log(part)\n        \n        const g = svg.append(\"g\")\n            .attr(\"transform\", `translate(${width / 2},${width / 2})`);\n\n        const path = g.append(\"g\")\n            .selectAll(\"path\")\n            .data(part.descendants().slice(1))\n            .join(\"path\")\n            .attr(\"fill\", d => { return color(d.value / root.children[0].value); })\n            .attr(\"d\", d => arc(d.current));\n\n        path.filter(d => d.children)\n                .style(\"cursor\", \"pointer\")\n                .on(\"end\", transition);\n\n        transition();\n        function transition(){\n            root.each(d => d.target = {\n                x0: -d.current.x0,\n                x1: -d.current.x1,\n                y0: d.current.y0,\n                y1: d.current.y1\n            });\n\n            console.log(\"clicked\")\n            const t = g.transition().duration(250);\n            path.transition(t)\n                .tween(\"data\", d => {\n                    const i = d3.interpolate(d.current, d.target);\n                    return t => d.current = i(t);\n                })\n                .attrTween(\"d\", d => () => arc(d.current))\n        }\n    }\n    */\n\n    drawChart(data) {\n        \n        var width = this.props.width\n        var radius = width / 6\n        var format = d3.format(\",d\")\n\n        var arc = d3.arc()\n            .startAngle(d => d.x0)\n            .endAngle(d => d.x1)\n            .padAngle(d => Math.min((d.x1 - d.x0) / 2, 0.005))\n            .padRadius(radius * 1.5)\n            .innerRadius(d => d.y0 * radius)\n            .outerRadius(d => Math.max(d.y0 * radius, d.y1 * radius - 1))\n\n        var partition = data => {\n            const root = d3.hierarchy(data)\n                .sum(d => d.value)\n                .sort((a, b) => b.value - a.value);\n            return d3.partition()\n                .size([2 * Math.PI, root.height + 1])\n              (root);\n          }\n\n        data = tree(data, this.props.root);\n        const root = partition(data);\n        var color = d3.interpolateReds\n        root.each(d => d.current = d);\n        \n        const svg = d3.select(\"#\" + this.props.id).append(\"svg\")\n            .attr(\"width\", width)\n            .attr(\"height\", width)\n            .attr(\"viewBox\", [0, 0, width, width])\n            .style(\"font\", \"13px helvetica sans-serif\");\n        \n        const g = svg.append(\"g\")\n            .attr(\"transform\", `translate(${width / 2},${width / 2})`);\n        \n        const path = g.append(\"g\")\n            .selectAll(\"path\")\n            .data(root.descendants().slice(1))\n            .join(\"path\")\n            .attr(\"fill\", d => { return color(d.value / (d.parent.value*0.5)); })\n            .attr(\"fill-opacity\", d => arcVisible(d.current) ? (d.children ? 0.6 : 0.4) : 0)\n            .attr(\"d\", d => arc(d.current));\n        \n        path.filter(d => d.children)\n            .style(\"cursor\", \"pointer\")\n            .on(\"click\", clicked);\n        \n        path.append(\"title\")\n            .text(d => `${d.ancestors().map(d => d.data.name).reverse().join(\"/\")}\\n${format(d.value)}`);\n        \n        const label = g.append(\"g\")\n            .attr(\"pointer-events\", \"none\")\n            .attr(\"text-anchor\", \"middle\")\n            .style(\"user-select\", \"none\")\n            .selectAll(\"text\")\n            .data(root.descendants().slice(1))\n            .join(\"text\")\n            .attr(\"dy\", \"0.35em\")\n            .attr(\"fill-opacity\", d => +labelVisible(d.current))\n            .attr(\"transform\", d => labelTransform(d.current))\n            .text(d => d.data.name);\n        \n        const parent = g.append(\"circle\")\n            .datum(root)\n            .attr(\"r\", radius)\n            .attr(\"fill\", \"none\")\n            .attr(\"pointer-events\", \"all\")\n            .on(\"click\", clicked);\n        \n        function clicked(event, p) {\n            parent.datum(p.parent || root);\n        \n            root.each(d => d.target = {\n            x0: Math.max(0, Math.min(1, (d.x0 - p.x0) / (p.x1 - p.x0))) * 2 * Math.PI,\n            x1: Math.max(0, Math.min(1, (d.x1 - p.x0) / (p.x1 - p.x0))) * 2 * Math.PI,\n            y0: Math.max(0, d.y0 - p.depth),\n            y1: Math.max(0, d.y1 - p.depth)\n            });\n        \n            const t = g.transition().duration(750);\n        \n            // Transition the data on all arcs, even the ones that aren’t visible,\n            // so that if this transition is interrupted, entering arcs will start\n            // the next transition from the desired position.\n            path.transition(t)\n                .tween(\"data\", d => {\n                const i = d3.interpolate(d.current, d.target);\n                return t => d.current = i(t);\n                })\n            .filter(function(d) {\n                return +this.getAttribute(\"fill-opacity\") || arcVisible(d.target);\n            })\n                .attr(\"fill-opacity\", d => arcVisible(d.target) ? (d.children ? 0.6 : 0.4) : 0)\n                .attrTween(\"d\", d => () => arc(d.current));\n        \n            label.filter(function(d) {\n                return +this.getAttribute(\"fill-opacity\") || labelVisible(d.target);\n            }).transition(t)\n                .attr(\"fill-opacity\", d => +labelVisible(d.target))\n                .attrTween(\"transform\", d => () => labelTransform(d.current));\n        }\n        \n        function arcVisible(d) {\n            return d.y1 <= 3 && d.y0 >= 1 && d.x1 > d.x0;\n        }\n        \n        function labelVisible(d) {\n            return d.y1 <= 3 && d.y0 >= 1 && (d.y1 - d.y0) * (d.x1 - d.x0) > 0.03;\n        }\n        \n        function labelTransform(d) {\n            const x = (d.x0 + d.x1) / 2 * 180 / Math.PI;\n            const y = (d.y0 + d.y1) / 2 * radius;\n            return `rotate(${x - 90}) translate(${y},0) rotate(${x < 180 ? 0 : 180})`;\n        }\n        \n        //return svg.node();\n        \n    }\n\n    render() {\n        return <div id={this.props.id} className=\"mt-2 text-center\"/>;\n      }\n  \n  \n\n}\n\nexport default SunburstChart;","import * as d3 from \"d3\";\n\n//\n// d3sparql.js - utilities for visualizing SPARQL results with the D3 library\n//\n//   Web site: http://github.com/ktym/d3sparql/\n//   Copyright: 2013-2015 (C) Toshiaki Katayama (ktym@dbcls.jp)\n//   License: BSD license (same as D3.js)\n//   Initial version: 2013-01-28\n//\n\nvar d3sparql = {\n    version: \"d3sparql.js version 2018-05-04\",\n    debug: false  // set to true for showing debug information\n  }\n\n/*\n  Convert sparql-results+json object into a JSON tree of {\"name\": name, \"value\": size, \"children\": []} format like in the flare.json file.\n  Suitable for d3.layout.hierarchy() family\n    * cluster:    d3sparql.dendrogram()\n    * pack:       d3sparql.circlepack()\n    * partition:  d3sparql.sunburst()\n    * tree:       d3sparql.roundtree()\n    * treemap:    d3sparql.treemap(), d3sparql.treemapzoom()\n  Options:\n    config = {\n      \"root\":   \"root_name\",    // SPARQL variable name for root node (optional; default is the 1st variable)\n      \"parent\": \"parent_name\",  // SPARQL variable name for parent node (optional; default is the 2nd variable)\n      \"child\":  \"child_name\",   // SPARQL variable name for child node (ptional; default is the 3rd variable)\n      \"value\":  \"value_name\"    // SPARQL variable name for numerical value of the child node (optional; default is the 4th variable or \"value\")\n    }\n  Synopsis:\n    d3sparql.sparql(endpoint, sparql, render)\n    function render(json) {\n      var config = { ... }\n      d3sparql.roundtree(json, config)\n      d3sparql.dendrogram(json, config)\n      d3sparql.sunburst(json, config)\n      d3sparql.treemap(json, config)\n      d3sparql.treemapzoom(json, config)\n    }\n*/\nfunction tree(json, root) {\n\n    var pair = new Map()\n    var size = new Map()\n    var parent = true;\n    var child = true;\n    var children = true\n    for (var i = 0; i < json.length; i++) {\n      parent = json[i][1]\n      child = json[i][0]\n      if (parent != child) {\n        if (pair.has(parent)) {\n          children = pair.get(parent)\n          children.push(child)\n        } else {\n          children = [child]\n        }\n        pair.set(parent, children)\n      }\n    }\n    function traverse(node) {\n      var list = pair.get(node)\n      if (list) {\n        var children = list.map(function(d) { return traverse(d) })\n        // sum of values of children\n        var subtotal = d3.sum(children, function(d) { return d.value })\n        // add a value of parent if exists\n        var total = d3.sum([subtotal, size.get(node)])\n        return {\"name\": node, \"children\": children}\n      } else {\n        return {\"name\": node, \"value\": size.get(node) || 1}\n      }\n    }\n    var tree = traverse(root)\n  \n    if (true || d3sparql.debug) { console.log(JSON.stringify(tree)) }\n    return tree\n  }\n\n  export{tree};","import logo from './logo.svg';\nimport './App.css';\nimport SunburstChart from \"./SunburstChart\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React, { useState } from 'react';\n\nfunction App() {\n  \n  const [showSunburst, setShowSunburst] = useState(false);\n\n  return (\n    <div className=\"App\">\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light position-fixed w-200px\">\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n          <a className=\"navbar-brand m-auto\" href=\"#home\">ITO Explorer</a>\n          <ul className=\"navbar-nav mr-auto flex-column vertical-nav\">\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" href=\"#home\">Home</a>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" href=\"#processes\">Processes</a>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" href=\"#data\">Data</a>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" href=\"#benchmarks\">Benchmarks</a>\n            </li>\n          </ul>\n        </div>\n      </nav>\n      <div className=\"content\">\n        <h1 id=\"home\" className=\"title display-4\">\n          Intelligence Task Ontology and Knowledge Graph (ITO)\n        </h1>\n        <p align=\"center\" className=\"mt-3 mb-5\">\n            <a href=\"https://github.com/OpenBioLink/ITO\" className=\"mx-1\">\n              <img alt=\"GitHub Repo stars\" src=\"https://img.shields.io/github/stars/OpenBioLink/ITO?style=social\"/>\n            </a>\n            <a href=\"https://bioportal.bioontology.org/ontologies/ITO\" className=\"mx-1\">\n              <img alt=\"BioPortal ontology\" src=\"https://img.shields.io/badge/BioPortal-ontology-success\"/>\n            </a>\n            <a href=\"https://arxiv.org/abs/2110.01434\" className=\"mx-1\">\n              <img alt=\"Arxiv paper\" src=\"https://img.shields.io/badge/arXiv-paper-success\"/>\n            </a>\n        </p>\n        <blockquote className=\"blockquote\">\n          <p>\n            The Intelligence Task Ontology and Knowledge Graph (ITO) provides a comprehensive, curated model of artificial intelligence tasks, benchmarks and benchmark results, including the biomedical domain. \n          </p>\n        </blockquote>\n        Research in artificial intelligence (AI) is addressing a growing number of tasks through a rapidly \n        growing number of models and methodologies. This makes it difficult to keep track of where novel \n        AI methods are successfully – or still unsuccessfully – applied, how progress is measured, how \n        different advances might synergize with each other, and how future research should be prioritized. \n        To help address these issues, we created the Intelligence Task Ontology and Knowledge Graph (ITO), \n        a comprehensive, richly structured and manually curated resource on artificial intelligence tasks, \n        benchmark results and performance metrics. The current version of ITO contain 685,560 edges, \n        1,100 classes representing AI processes and 1,995 properties representing performance metrics. \n        The goal of ITO is to enable precise and network-based analyses of the global landscape of AI tasks \n        and capabilities. ITO is based on technologies that allow for easy integration and enrichment with \n        external data, automated inference and continuous, collaborative expert curation of underlying \n        ontological models. We make the ITO dataset and a collection of Jupyter notebooks utilising ITO \n        openly available.\n\n        <h1 id=\"processes\" className=\"header\">Processes Sunburst</h1>\n        <p className=\"description\">Click on a segment to zoom in on a sub-process, click on the center of the sunburst to return to its parent. Hover over class to see the number of children.</p>\n        <SunburstChart width=\"900\" url=\"https://raw.githubusercontent.com/OpenBioLink/ITOExplorer/main/processes.json\" id=\"sunburst-processes\" root=\"Process\"/>\n        <h1 id=\"data\" className=\"header\">Data Sunburst</h1>\n        <p className=\"description\">Click on a segment to zoom in on a sub-process, click on the center of the sunburst to return to its parent. Hover over class to see the number of children.</p>\n        <SunburstChart width=\"900\" url=\"https://raw.githubusercontent.com/OpenBioLink/ITOExplorer/main/data.json\" id=\"sunburst-data\" root=\"Data\"/>\n        <h1 id=\"benchmarks\" className=\"header\">Benchmarks</h1>\n\n        <h2 id=\"nlp\" className=\"header\">Natural language processing</h2>\n        <h3>Trajectory for average gain ratio (task per year)</h3>\n        Global SOTA trajectory map for AI tasks in natural language processing. Vertical dashes represent anchors (i.e. first results establishing a new benchmark for a given task). Arrows represent gains in a SOTA trajectory. Arrow colors represent the ratio of the gain, i.e. darker arrows represent stronger gains. AI tasks that would contain only a single arrow are not displayed.\n        <iframe id=\"cv_traj\" className=\"mt-2\" style={{border:\"none\"}} seamless=\"seamless\" src=\"/ITOExplorer/vision_process.html\" height=\"725\" width=\"100%\"></iframe>\n        <div class=\"alert alert-light mb-5 pt-0 text-center\" role=\"alert\">\n          Interactive: Hover mouse over data items to display details.\n        </div>\n        <h3>Comparative yearly distribution of state-of-the-art (SOTA) averaged gain ratio values</h3>\n        Comparative yearly distribution of state-of-the-art (SOTA) averaged gain ratio values for NLP. Single dots in the boxplots represent the equivalent triangles values in the chart above. Anchors are not considered for this analysis.\n        <iframe id=\"cv_bpl\" className=\"mt-2\" scrolling=\"no\" style={{border:\"none\", display:\"block\", marginLeft:\"auto\", marginRight:\"auto\"}} seamless=\"seamless\" src=\"/ITOExplorer/vision_process_bpl.html\" height=\"430\" width=\"1010px\"></iframe>\n        <div class=\"alert alert-light mb-5 pt-0 text-center\" role=\"alert\">\n          Interactive: Hover mouse over data items to display details.\n        </div>\n        <h3>Pictorial chart</h3>\n        <iframe id=\"cv_pikto\" className=\"mt-2 mb-5\" style={{border:\"none\", display:\"block\", marginLeft:\"auto\", marginRight:\"auto\"}} seamless=\"seamless\" src=\"/ITOExplorer/natural_language_processing_pikto.html\" height=\"725\" width=\"100%\"></iframe>\n        <h3>Number Benchmarks SOTA/Active</h3>\n        <iframe id=\"cv_sota_active\" className=\"mt-2 mb-5\" style={{border:\"none\", display:\"block\", marginLeft:\"auto\", marginRight:\"auto\"}} seamless=\"seamless\" src=\"/ITOExplorer/natural_language_processing_prop_sota_active.html\" height=\"500px\" width=\"1000px\"></iframe>\n        <h3>Number of active benchmarks per task and year</h3>\n        <iframe id=\"cv_active_task\" className=\"mt-2 mb-5\" style={{border:\"none\", display:\"block\", marginLeft:\"auto\", marginRight:\"auto\"}} seamless=\"seamless\" src=\"/ITOExplorer/natural_language_processing_task_active.html\" height=\"725\" width=\"100%\"></iframe>\n\n        <h2 id=\"vp\" className=\"header\">Computer vision</h2>\n        <h3>Trajectory for average gain ratio (task per year)</h3>\n        Global SOTA trajectory map for AI tasks in computer vision. Vertical dashes represent anchors (i.e. first results establishing a new benchmark for a given task). Arrows represent gains in a SOTA trajectory. Arrow colors represent the ratio of the gain, i.e. darker arrows represent stronger gains. AI tasks that would contain only a single arrow are not displayed.\n        <iframe id=\"cv_traj\" className=\"mt-2\" style={{border:\"none\"}} seamless=\"seamless\" src=\"/ITOExplorer/natural_language_processing.html\" height=\"725\" width=\"100%\"></iframe>\n        <div class=\"alert alert-light mb-5 pt-0 text-center\" role=\"alert\">\n          Interactive: Hover mouse over data items to display details.\n        </div>\n        <h3>Comparative yearly distribution of state-of-the-art (SOTA) averaged gain ratio values</h3>\n        Comparative yearly distribution of state-of-the-art (SOTA) averaged gain ratio values for computer vision. Single dots in the boxplots represent the equivalent triangles values in the chart above. Anchors are not considered for this analysis.\n        <iframe id=\"cv_bpl\" className=\"mt-2\" scrolling=\"no\" style={{border:\"none\", display:\"block\", marginLeft:\"auto\", marginRight:\"auto\"}} seamless=\"seamless\" src=\"/ITOExplorer/natural_language_processing_bpl.html\" height=\"430\" width=\"1010px\"></iframe>\n        <div class=\"alert alert-light mb-5 pt-0 text-center\" role=\"alert\">\n          Interactive: Hover mouse over data items to display details.\n        </div>\n        <h3>Pictorial chart</h3>\n        <iframe id=\"cv_pikto\" className=\"mt-2 mb-5\" style={{border:\"none\", display:\"block\", marginLeft:\"auto\", marginRight:\"auto\"}} seamless=\"seamless\" src=\"/ITOExplorer/vision_process_pikto.html\" height=\"725\" width=\"100%\"></iframe>\n        <h3>Number Benchmarks SOTA/Active</h3>\n        <iframe id=\"cv_sota_active\" className=\"mt-2 mb-5\" style={{border:\"none\", display:\"block\", marginLeft:\"auto\", marginRight:\"auto\"}} seamless=\"seamless\" src=\"/ITOExplorer/vision_process_prop_sota_active.html\" height=\"500px\" width=\"1000px\"></iframe>\n        <h3>Number of active benchmarks per task and year</h3>\n        <iframe id=\"cv_active_task\" className=\"mt-2 mb-5\" style={{border:\"none\", display:\"block\", marginLeft:\"auto\", marginRight:\"auto\"}} seamless=\"seamless\" src=\"/ITOExplorer/vision_process_task_active.html\" height=\"725\" width=\"100%\"></iframe>\n      </div>\n      <div class=\"footer\" className=\"mb-4 border-top\">\n        <span class=\"footer_about\">\n          <p className=\"mt-2\">Work received funding from</p>\n          <a id=\"simplex-logo\" href=\"https://www.netidee.at\" target=\"_blank\"><img alt=\"Netidee logo\" src=\"/ITOExplorer/netidee-Logo.svg\"/></a>\n          <p>This work is licensed under a <a rel=\"license\" href=\"http://creativecommons.org/licenses/by-sa/4.0/\">Creative Commons Attribution-ShareAlike 4.0 International License</a><br/>\n            <a rel=\"license\" href=\"http://creativecommons.org/licenses/by-sa/4.0/\"><img alt=\"Creative Commons License\" style={{borderWidth:0}} src=\"https://i.creativecommons.org/l/by-sa/4.0/80x15.png\"/></a>\n          </p>\n      </span>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","\nconst axios = require('axios');\n\nfunction get(url){\n    return new Promise((resolve) => {\n        axios.get(\n            url\n        ).then(function (response) {\n            resolve(response.data);\n        })\n        .catch(function (error) {\n            console.log(error);\n        });\n    });\n}\n\nexports.get = get;"],"sourceRoot":""}