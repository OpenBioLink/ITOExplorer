{"version":3,"sources":["logo.svg","SunburstChart.js","d3sparql.js","App.js","reportWebVitals.js","index.js","rest.js"],"names":["SunburstChart","get","this","props","url","then","data","drawChart","width","radius","format","d3","arc","startAngle","d","x0","endAngle","x1","padAngle","Math","min","padRadius","innerRadius","y0","outerRadius","max","y1","json","root","pair","Map","size","parent","child","children","i","length","has","push","set","tree","traverse","node","list","map","subtotal","value","console","log","JSON","stringify","sum","sort","a","b","PI","height","partition","color","each","current","g","id","append","attr","style","path","selectAll","descendants","slice","join","arcVisible","filter","on","clicked","text","ancestors","name","reverse","label","labelVisible","labelTransform","datum","event","p","target","depth","t","transition","duration","tween","getAttribute","attrTween","x","y","className","Component","App","useState","class","href","align","alt","src","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","axios","require","exports","Promise","resolve","response","catch","error"],"mappings":"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","file":"static/js/main.b84f37ae.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","\nimport React, {Component} from 'react';\nimport * as d3 from \"d3\";\nimport {get} from \"./rest\";\nimport {tree} from \"./d3sparql\";\n\nclass SunburstChart extends Component {\n\n    componentDidMount() {\n        get(this.props.url).then((data) => {\n            this.drawChart(data);\n        })\n    }\n\n    /*\n    drawLoading(){\n        var width = 900\n        var radius = width / 6\n        var format = d3.format(\",d\")\n\n        var arc = d3.arc()\n            .startAngle(d => d.x0)\n            .endAngle(d => d.x1)\n            .padAngle(d => Math.min((d.x1 - d.x0) / 2, 0.005))\n            .padRadius(radius * 1.5)\n            .innerRadius(d => d.y0 * radius)\n            .outerRadius(d => Math.max(d.y0 * radius, d.y1 * radius - 1))\n        \n        var color = d3.interpolateReds\n        const svg = d3.select(\"#sunburst\").append(\"svg\")\n            .attr(\"width\", width)\n            .attr(\"height\", width)\n            .attr(\"viewBox\", [0, 0, width, width])\n            .style(\"font\", \"13px helvetica sans-serif\");\n\n\n        var root = {\"name\": \"root\", \"children\": []}\n        var data = [1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377]\n        data.forEach((elem,idx) => {\n            var children = data.slice(0,idx)\n            children.forEach((elem_,idx_) => {\n                children[idx_] = {\"name\": elem_, \"value\": elem_}\n            });\n            root.children.push({\"name\": elem, \"children\": children})\n        });\n\n        root = d3.hierarchy(root)\n                    .sum(d => d.value)\n                    .sort((a, b) => b.value - a.value);\n        root.each(d => d.current = d);\n        console.log(root);\n            \n        var part = d3.partition().size([2 * Math.PI, 3])(root);\n\n        console.log(part)\n        \n        const g = svg.append(\"g\")\n            .attr(\"transform\", `translate(${width / 2},${width / 2})`);\n\n        const path = g.append(\"g\")\n            .selectAll(\"path\")\n            .data(part.descendants().slice(1))\n            .join(\"path\")\n            .attr(\"fill\", d => { return color(d.value / root.children[0].value); })\n            .attr(\"d\", d => arc(d.current));\n\n        path.filter(d => d.children)\n                .style(\"cursor\", \"pointer\")\n                .on(\"end\", transition);\n\n        transition();\n        function transition(){\n            root.each(d => d.target = {\n                x0: -d.current.x0,\n                x1: -d.current.x1,\n                y0: d.current.y0,\n                y1: d.current.y1\n            });\n\n            console.log(\"clicked\")\n            const t = g.transition().duration(250);\n            path.transition(t)\n                .tween(\"data\", d => {\n                    const i = d3.interpolate(d.current, d.target);\n                    return t => d.current = i(t);\n                })\n                .attrTween(\"d\", d => () => arc(d.current))\n        }\n    }\n    */\n\n    drawChart(data) {\n        \n        var width = this.props.width\n        var radius = width / 6\n        var format = d3.format(\",d\")\n\n        var arc = d3.arc()\n            .startAngle(d => d.x0)\n            .endAngle(d => d.x1)\n            .padAngle(d => Math.min((d.x1 - d.x0) / 2, 0.005))\n            .padRadius(radius * 1.5)\n            .innerRadius(d => d.y0 * radius)\n            .outerRadius(d => Math.max(d.y0 * radius, d.y1 * radius - 1))\n\n        var partition = data => {\n            const root = d3.hierarchy(data)\n                .sum(d => d.value)\n                .sort((a, b) => b.value - a.value);\n            return d3.partition()\n                .size([2 * Math.PI, root.height + 1])\n              (root);\n          }\n\n        data = tree(data, this.props.root);\n        const root = partition(data);\n        var color = d3.interpolateReds\n        root.each(d => d.current = d);\n        \n        const svg = d3.select(\"#\" + this.props.id).append(\"svg\")\n            .attr(\"width\", width)\n            .attr(\"height\", width)\n            .attr(\"viewBox\", [0, 0, width, width])\n            .style(\"font\", \"13px helvetica sans-serif\");\n        \n        const g = svg.append(\"g\")\n            .attr(\"transform\", `translate(${width / 2},${width / 2})`);\n        \n        const path = g.append(\"g\")\n            .selectAll(\"path\")\n            .data(root.descendants().slice(1))\n            .join(\"path\")\n            .attr(\"fill\", d => { return color(d.value / (d.parent.value*0.5)); })\n            .attr(\"fill-opacity\", d => arcVisible(d.current) ? (d.children ? 0.6 : 0.4) : 0)\n            .attr(\"d\", d => arc(d.current));\n        \n        path.filter(d => d.children)\n            .style(\"cursor\", \"pointer\")\n            .on(\"click\", clicked);\n        \n        path.append(\"title\")\n            .text(d => `${d.ancestors().map(d => d.data.name).reverse().join(\"/\")}\\n${format(d.value)}`);\n        \n        const label = g.append(\"g\")\n            .attr(\"pointer-events\", \"none\")\n            .attr(\"text-anchor\", \"middle\")\n            .style(\"user-select\", \"none\")\n            .selectAll(\"text\")\n            .data(root.descendants().slice(1))\n            .join(\"text\")\n            .attr(\"dy\", \"0.35em\")\n            .attr(\"fill-opacity\", d => +labelVisible(d.current))\n            .attr(\"transform\", d => labelTransform(d.current))\n            .text(d => d.data.name);\n        \n        const parent = g.append(\"circle\")\n            .datum(root)\n            .attr(\"r\", radius)\n            .attr(\"fill\", \"none\")\n            .attr(\"pointer-events\", \"all\")\n            .on(\"click\", clicked);\n        \n        function clicked(event, p) {\n            parent.datum(p.parent || root);\n        \n            root.each(d => d.target = {\n            x0: Math.max(0, Math.min(1, (d.x0 - p.x0) / (p.x1 - p.x0))) * 2 * Math.PI,\n            x1: Math.max(0, Math.min(1, (d.x1 - p.x0) / (p.x1 - p.x0))) * 2 * Math.PI,\n            y0: Math.max(0, d.y0 - p.depth),\n            y1: Math.max(0, d.y1 - p.depth)\n            });\n        \n            const t = g.transition().duration(750);\n        \n            // Transition the data on all arcs, even the ones that aren’t visible,\n            // so that if this transition is interrupted, entering arcs will start\n            // the next transition from the desired position.\n            path.transition(t)\n                .tween(\"data\", d => {\n                const i = d3.interpolate(d.current, d.target);\n                return t => d.current = i(t);\n                })\n            .filter(function(d) {\n                return +this.getAttribute(\"fill-opacity\") || arcVisible(d.target);\n            })\n                .attr(\"fill-opacity\", d => arcVisible(d.target) ? (d.children ? 0.6 : 0.4) : 0)\n                .attrTween(\"d\", d => () => arc(d.current));\n        \n            label.filter(function(d) {\n                return +this.getAttribute(\"fill-opacity\") || labelVisible(d.target);\n            }).transition(t)\n                .attr(\"fill-opacity\", d => +labelVisible(d.target))\n                .attrTween(\"transform\", d => () => labelTransform(d.current));\n        }\n        \n        function arcVisible(d) {\n            return d.y1 <= 3 && d.y0 >= 1 && d.x1 > d.x0;\n        }\n        \n        function labelVisible(d) {\n            return d.y1 <= 3 && d.y0 >= 1 && (d.y1 - d.y0) * (d.x1 - d.x0) > 0.03;\n        }\n        \n        function labelTransform(d) {\n            const x = (d.x0 + d.x1) / 2 * 180 / Math.PI;\n            const y = (d.y0 + d.y1) / 2 * radius;\n            return `rotate(${x - 90}) translate(${y},0) rotate(${x < 180 ? 0 : 180})`;\n        }\n        \n        //return svg.node();\n        \n    }\n\n    render() {\n        return <div id={this.props.id} className=\"mt-2 text-center\"/>;\n      }\n  \n  \n\n}\n\nexport default SunburstChart;","import * as d3 from \"d3\";\n\n//\n// d3sparql.js - utilities for visualizing SPARQL results with the D3 library\n//\n//   Web site: http://github.com/ktym/d3sparql/\n//   Copyright: 2013-2015 (C) Toshiaki Katayama (ktym@dbcls.jp)\n//   License: BSD license (same as D3.js)\n//   Initial version: 2013-01-28\n//\n\nvar d3sparql = {\n    version: \"d3sparql.js version 2018-05-04\",\n    debug: false  // set to true for showing debug information\n  }\n\n/*\n  Convert sparql-results+json object into a JSON tree of {\"name\": name, \"value\": size, \"children\": []} format like in the flare.json file.\n  Suitable for d3.layout.hierarchy() family\n    * cluster:    d3sparql.dendrogram()\n    * pack:       d3sparql.circlepack()\n    * partition:  d3sparql.sunburst()\n    * tree:       d3sparql.roundtree()\n    * treemap:    d3sparql.treemap(), d3sparql.treemapzoom()\n  Options:\n    config = {\n      \"root\":   \"root_name\",    // SPARQL variable name for root node (optional; default is the 1st variable)\n      \"parent\": \"parent_name\",  // SPARQL variable name for parent node (optional; default is the 2nd variable)\n      \"child\":  \"child_name\",   // SPARQL variable name for child node (ptional; default is the 3rd variable)\n      \"value\":  \"value_name\"    // SPARQL variable name for numerical value of the child node (optional; default is the 4th variable or \"value\")\n    }\n  Synopsis:\n    d3sparql.sparql(endpoint, sparql, render)\n    function render(json) {\n      var config = { ... }\n      d3sparql.roundtree(json, config)\n      d3sparql.dendrogram(json, config)\n      d3sparql.sunburst(json, config)\n      d3sparql.treemap(json, config)\n      d3sparql.treemapzoom(json, config)\n    }\n*/\nfunction tree(json, root) {\n\n    var pair = new Map()\n    var size = new Map()\n    var parent = true;\n    var child = true;\n    var children = true\n    for (var i = 0; i < json.length; i++) {\n      parent = json[i][1]\n      child = json[i][0]\n      if (parent != child) {\n        if (pair.has(parent)) {\n          children = pair.get(parent)\n          children.push(child)\n        } else {\n          children = [child]\n        }\n        pair.set(parent, children)\n      }\n    }\n    function traverse(node) {\n      var list = pair.get(node)\n      if (list) {\n        var children = list.map(function(d) { return traverse(d) })\n        // sum of values of children\n        var subtotal = d3.sum(children, function(d) { return d.value })\n        // add a value of parent if exists\n        var total = d3.sum([subtotal, size.get(node)])\n        return {\"name\": node, \"children\": children}\n      } else {\n        return {\"name\": node, \"value\": size.get(node) || 1}\n      }\n    }\n    var tree = traverse(root)\n  \n    if (true || d3sparql.debug) { console.log(JSON.stringify(tree)) }\n    return tree\n  }\n\n  export{tree};","import logo from './logo.svg';\nimport './App.css';\nimport { Navbar, Container, Nav, Modal, Button } from 'react-bootstrap';\nimport SunburstChart from \"./SunburstChart\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React, { useState } from 'react';\n\nfunction App() {\n  \n  const [showSunburst, setShowSunburst] = useState(false);\n\n  return (\n    <div className=\"App\">\n      <nav class=\"navbar navbar-expand-lg navbar-light bg-light position-fixed w-200px\">\n        <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n          <a class=\"navbar-brand m-auto\" href=\"#home\">ITOExplorer</a>\n          <ul class=\"navbar-nav mr-auto flex-column vertical-nav\">\n            <li class=\"nav-item\">\n              <a class=\"nav-link\" href=\"#home\">Home</a>\n            </li>\n            <li class=\"nav-item\">\n              <a class=\"nav-link\" href=\"#processes\">Processes</a>\n            </li>\n            <li class=\"nav-item\">\n              <a class=\"nav-link\" href=\"#data\">Data</a>\n            </li>\n          </ul>\n        </div>\n      </nav>\n      <div className=\"content\">\n        <h1 id=\"home\" className=\"title\">\n          Intelligence Task Ontology and Knowledge Graph (ITO)\n          <p align=\"center\">\n            <a href=\"https://github.com/OpenBioLink/ITO\" className=\"mx-2\">\n              <img alt=\"GitHub Repo stars\" src=\"https://img.shields.io/github/stars/OpenBioLink/ITO?style=social\"/>\n            </a>\n            <a href=\"https://bioportal.bioontology.org/ontologies/ITO\" className=\"mx-2\">\n              <img alt=\"BioPortal ontology\" src=\"https://img.shields.io/badge/BioPortal-ontology-success\"/>\n            </a>\n          </p>\n        </h1>\n        The Intelligence Task Ontology and Knowledge Graph (ITO) provides a comprehensive, curated model of artificial intelligence tasks, benchmarks and benchmark results, including the biomedical domain.\n\n        Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.   \n\n  Duis autem vel eum iriure dolor in hendrerit in vulputate velit esse molestie consequat, vel illum dolore eu feugiat nulla facilisis at vero eros et accumsan et iusto odio dignissim qui blandit praesent luptatum zzril delenit augue duis dolore te feugait nulla facilisi. Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat.   \n\n  Ut wisi enim ad minim veniam, quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat. Duis autem vel eum iriure dolor in hendrerit in vulputate velit esse molestie consequat, vel illum dolore eu feugiat nulla facilisis at vero eros et accumsan et iusto odio dignissim qui blandit praesent luptatum zzril delenit augue duis dolore te feugait nulla facilisi.   \n\n  Nam liber tempor cum soluta nobis eleifend option congue nihil imperdiet doming id quod mazim placerat facer possim assum. Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat. Ut wisi enim ad minim veniam, quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat.   \n\n  Duis autem vel eum iriure dolor in hendrerit in vulputate velit esse molestie consequat, vel illum dolore eu feugiat nulla facilisis.   \n\n  At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, At accusam aliquyam diam diam dolore dolores duo eirmod eos erat, et nonumy sed tempor et et invidunt justo labore Stet clita ea et gubergren, kasd magna no rebum. sanctus sea sed takimata ut vero voluptua. est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur\n        <h1 id=\"processes\" className=\"header\">Processes Sunburst</h1>\n        <SunburstChart width=\"900\" url=\"https://raw.githubusercontent.com/OpenBioLink/ITOExplorer/main/processes.json\" id=\"sunburst-processes\" root=\"Process\"/>\n        <h1 id=\"data\" className=\"header\">Data Sunburst</h1>\n        <SunburstChart width=\"900\" url=\"https://raw.githubusercontent.com/OpenBioLink/ITOExplorer/main/data.json\" id=\"sunburst-data\" root=\"Data\"/>\n      </div>\n    </div>\n  );\n}\n\nfunction MyVerticallyCenteredModal(props) {\n  return (\n    <Modal\n      {...props}\n      size=\"xl\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n    >\n      <Modal.Header closeButton>\n        <Modal.Title id=\"contained-modal-title-vcenter\">\n          Sunburst\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <div>\n        </div>\n      </Modal.Body>\n    </Modal>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","\nconst axios = require('axios');\n\nfunction get(url){\n    return new Promise((resolve) => {\n        axios.get(\n            url\n        ).then(function (response) {\n            resolve(response.data);\n        })\n        .catch(function (error) {\n            console.log(error);\n        });\n    });\n}\n\nexports.get = get;"],"sourceRoot":""}